@function fois2($nb) {
  $resultat: $nb * 2;
  @return $resultat;
}

/*

    @if et @else permettent d’exécuter un bloc de code SI (if) une condition est remplie ou d’exécuter un autre code SINON (else) ;

    @each évalue un bloc pour chaque élément d’une liste ou chaque paire d’une map (le mapping correspond au fait de lier certaines données entre elles) ;

    @for évalue un bloc un nombre de fois précisé lors de la création de la règle (le nombre d’évaluation est connu à l’avance) ;

    @while évalue un bloc jusqu’à ce qu’une certaine condition de sortie soit remplie (le nombre d’évaluation n’est pas connu à l’avance).

    opérateurs:
    opérateurs arithmétiques, 

    opérateurs logiques,  and, or, not

    opérateurs de concaténation, + - /

    opérateurs de conparaison,  ==, !=, <, >, <=, >= 
    etc. 

    https://www.pierre-giraud.com/sass-apprendre-cours-complet/sass-import/
*/

$margin: 0;
$width: 1000;
@while ($margin < $width/50) {
  $margin: $margin + 1; //Ajouter 1 à la valeur précédente de $margin
}

$base-color: #f8bf26;

@for $i from 1 through 4 {
  li:nth-child(4n + #{$i}) {
    background-color: lighten($base-color, $i * 5%);
  }
}

@for $i from 1 to 7 {
  .paragraphe-#{$i} {
    font-size: 10px * $i;
    color: rgb(20 * $i, 255, $i);
  }
}

$x: 1;
@while ($x < 7) {
  .paragraph-#{$x} {
    height: ($x * 50) + px;
  }
  $x: $x + 1;
}
